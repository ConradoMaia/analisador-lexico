//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from MyLang.g4 by ANTLR 4.13.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="MyLangParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.2")]
[System.CLSCompliant(false)]
public interface IMyLangListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyLangParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProgram([NotNull] MyLangParser.ProgramContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyLangParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProgram([NotNull] MyLangParser.ProgramContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyLangParser.decl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDecl([NotNull] MyLangParser.DeclContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyLangParser.decl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDecl([NotNull] MyLangParser.DeclContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyLangParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterType([NotNull] MyLangParser.TypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyLangParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitType([NotNull] MyLangParser.TypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyLangParser.stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStmt([NotNull] MyLangParser.StmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyLangParser.stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStmt([NotNull] MyLangParser.StmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyLangParser.assignStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignStmt([NotNull] MyLangParser.AssignStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyLangParser.assignStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignStmt([NotNull] MyLangParser.AssignStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyLangParser.ifStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIfStmt([NotNull] MyLangParser.IfStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyLangParser.ifStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIfStmt([NotNull] MyLangParser.IfStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyLangParser.whileStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhileStmt([NotNull] MyLangParser.WhileStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyLangParser.whileStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhileStmt([NotNull] MyLangParser.WhileStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyLangParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlock([NotNull] MyLangParser.BlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyLangParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlock([NotNull] MyLangParser.BlockContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpr([NotNull] MyLangParser.ExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpr([NotNull] MyLangParser.ExprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MyLangParser.relop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRelop([NotNull] MyLangParser.RelopContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyLangParser.relop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRelop([NotNull] MyLangParser.RelopContext context);
}
